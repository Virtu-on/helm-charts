# Default values for restreamer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: datarhei/restreamer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 2.5.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: restreamer.cluster-example.local
  type: ClusterIP
  port: 80
  sslPort: 443
  rtmpPort: 1935
  rtmpsPort: 1936

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: restreamer.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: restreamer-tls
  #    hosts:
  #      - restreamer.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# External TLS Secret can be the secret generated by cert-manager
externalTlsSecret:
  enabled: false
  name: restreamer-tls
  auto: false
  autoHostname: "restreamer.cluster-example.local"
  issuer: letsencrypt-production

## Persist data to a persitent volume
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 1Gi
  storageClass: ""
  #existingDataClaim: "restreamer-data"
  #existingConfigClaim: "restreamer-config"

env:
  CORE_LOG_LEVEL: info
  CORE_RTMP_ENABLE: false
  CORE_RTMP_TOKEN: ""
  CORE_RTMP_ENABLE_TLS: false
  CORE_TLS_ENABLE: false
  # when using service.type: LoadBalancer and TLS_ENABLE
  # set either env.CORE_TLS_AUTO or externalTlsSecret
  CORE_TLS_AUTO: false
  CORE_TLS_ADDRESS: :8181
  CORE_TLS_CERTFILE: /core/tls/tls.crt
  CORE_TLS_KEYFILE: /core/tls/tls.key
  CORE_HOST_NAME: "stream.cluster-example.local"
  CORE_HOST_AUTO: false

secretEnv:
  CORE_API_AUTH_USERNAME: admin
  CORE_API_AUTH_PASSWORD: ""