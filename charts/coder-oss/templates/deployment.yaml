apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coder-oss.fullname" . }}
  labels:
    {{- include "coder-oss.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "coder-oss.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "coder-oss.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "coder-oss.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: coder
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- if .Values.coder.tls.secretName }}
            - name: CODER_ADDRESS
              value: "0.0.0.0:8443"
            - name: CODER_TLS_ENABLE
              value: "true"
            - name: CODER_TLS_CERT_FILE
              value: /etc/ssl/certs/coder/tls.crt
            - name: CODER_TLS_KEY_FILE
              value: /etc/ssl/certs/coder/tls.key
            {{- else }}
            - name: CODER_ADDRESS
              value: "0.0.0.0:8080"
            {{- end }}
            {{- with .Values.coder.env -}}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          ports:
            {{- if .Values.coder.tls.secretName }}
            - name: https
              containerPort: 8443
              protocol: TCP
            {{- else }}
            - name: http
              containerPort: 8080
              protocol: TCP
            {{- end }}
          readinessProbe:
            httpGet:
              path: /api/v2/buildinfo
              port: http
          livenessProbe:
            httpGet:
              path: /api/v2/buildinfo
              port: http
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
